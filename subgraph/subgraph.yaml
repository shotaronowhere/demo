specVersion: 1.0.0
description: Combined subgraph for Algebra DEX, Farming, and Prediction Markets
indexerHints:
  prune: auto
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Factory
    network: gnosis
    source:
      abi: Factory
      address: "0xA0864cCA6E114013AB0e27cbd5B6f4c8947da766"
      startBlock: 30096645
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/algebra/mappings/factory.ts
      entities:
        - Pool
        - Token
      abis:
        - name: Factory
          file: ./abis/factory.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
        - name: Pool
          file: ./abis/pool.json
      eventHandlers:
        - event: Pool(indexed address,indexed address,address)
          handler: handlePoolCreated
  - kind: ethereum/contract
    name: NonfungiblePositionManager
    network: gnosis
    source:
      abi: NonfungiblePositionManager
      address: "0x91fD594c46D8B01E62dBDeBed2401dde01817834"
      startBlock: 30096660
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/algebra/mappings/position-manager.ts
      entities:
        - Pool
        - Token
        - Deposit
      abis:
        - name: NonfungiblePositionManager
          file: ./abis/NonfungiblePositionManager.json
        - name: Pool
          file: ./abis/pool.json
        - name: Factory
          file: ./abis/factory.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
      eventHandlers:
        - event: Collect(indexed uint256,address,uint256,uint256)
          handler: handleCollect
        - event: DecreaseLiquidity(indexed uint256,uint128,uint256,uint256)
          handler: handleDecreaseLiquidity
        - event: IncreaseLiquidity(indexed
            uint256,uint128,uint128,uint256,uint256,address)
          handler: handleIncreaseLiquidity
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
  - kind: ethereum/contract
    name: EternalFarming
    network: gnosis
    source:
      abi: EternalFarming
      address: "0x607BbfD4CEbd869AaD04331F8a2AD0C3C396674b"
      startBlock: 30096668
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/algebra-farming/mappings/eternalFarming.ts
      entities:
        - Deposit
        - Token
        - EternalFarming
        - Reward
      abis:
        - name: EternalFarming
          file: ./abis/EternalFarming.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
      eventHandlers:
        - event: EternalFarmingCreated(indexed address,indexed address,indexed
            address,address,uint256,uint256,uint256,uint256,(uint256,uint256,uint256,uint32,uint32,uint32),address,uint24)
          handler: handleIncentiveCreated
        - event: RewardClaimed(indexed address,uint256,indexed address,indexed address)
          handler: handleRewardClaimed
        - event: FarmEntered(indexed uint256,indexed bytes32,uint128,uint256)
          handler: handleTokenStaked
        - event: FarmEnded(indexed uint256,indexed bytes32,indexed
            address,address,address,uint256,uint256)
          handler: handleTokenUnstaked
        - event: IncentiveDeactivated(indexed address,indexed address,indexed
            address,address,uint256,uint256)
          handler: handleDeactivate
        - event: RewardsRatesChanged(uint128,uint128,bytes32)
          handler: handleRewardsRatesChanged
        - event: RewardsAdded(uint256,uint256,bytes32)
          handler: handleRewardsAdded
        - event: RewardAmountsDecreased(uint256,uint256,bytes32)
          handler: handleRewardAmountsDecreased
        - event: RewardsCollected(uint256,bytes32,uint256,uint256)
          handler: handleCollect
  - kind: ethereum/contract
    name: FarmingCenter
    network: gnosis
    source:
      abi: FarmingCenter
      address: "0xDe51dDF1aE7d5BBD7bF1A0e40aAA1F6C12579106"
      startBlock: 30096672
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/algebra-farming/mappings/center.ts
      entities:
        - Deposit
        - Token
      abis:
        - name: FarmingCenter
          file: ./abis/FarmingCenter.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
  - kind: ethereum/contract
    name: LimitFarming
    network: gnosis
    source:
      address: "0xA01e2785d2D04cC0a09Bde9C3eA49Bf0aD7811F2"
      abi: LimitFarming
      startBlock: 30096667
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/algebra-farming/mappings/limitFarming.ts
      entities:
        - Deposit
        - Token
        - LimitFarming
        - Reward
      abis:
        - name: LimitFarming
          file: ./abis/LimitFarming.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
      eventHandlers:
        - event: LimitFarmingCreated(indexed address,indexed address,indexed
            address,uint256,uint256,uint256,uint256,(uint256,uint256,uint256,uint32,uint32,uint32),address,uint24,uint32)
          handler: handleIncentiveCreated
        - event: RewardClaimed(indexed address,uint256,indexed address,indexed address)
          handler: handleRewardClaimed
        - event: FarmEntered(indexed uint256,indexed bytes32,uint128,uint256)
          handler: handleTokenStaked
        - event: FarmEnded(indexed uint256,indexed bytes32,indexed
            address,address,address,uint256,uint256)
          handler: handleTokenUnstaked
        - event: IncentiveDeactivated(indexed address,indexed address,indexed
            address,address,uint256,uint256)
          handler: handleDeactivate
        - event: RewardsAdded(uint256,uint256,bytes32)
          handler: handleRewardsAdded
        - event: RewardAmountsDecreased(uint256,uint256,bytes32)
          handler: handleRewardAmountsDecreased
  - kind: ethereum
    name: MarketFactory
    network: gnosis
    source:
      abi: MarketFactory
      address: "0x83183DA839Ce8228E31Ae41222EaD9EDBb5cDcf1"
      startBlock: 36404701
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities: []
      abis:
        - name: MarketFactory
          file: ./abis/MarketFactory.json
        - name: Reality
          file: ./abis/Realitiy.json
        - name: MarketView
          file: ./abis/MarketView.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
      eventHandlers:
        - event: NewMarket(indexed address,string,address,bytes32,bytes32,bytes32[])
          handler: handleNewMarket
      file: ./src/market-factory.ts
  - kind: ethereum
    name: Reality
    network: gnosis
    source:
      abi: Reality
      address: "0xE78996A233895bE74a66F451f1019cA9734205cc"
      startBlock: 36404701
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      abis:
        - name: Reality
          file: ./abis/Realitiy.json
      entities: []
      eventHandlers:
        - event: LogNewAnswer(bytes32,indexed bytes32,bytes32,indexed
            address,uint256,uint256,bool)
          handler: handleNewAnswer
        - event: LogFinalize(indexed bytes32,indexed bytes32)
          handler: handleFinalize
        - event: LogNotifyOfArbitrationRequest(indexed bytes32,indexed address)
          handler: handleArbitrationRequest
        - event: LogReopenQuestion(indexed bytes32,indexed bytes32)
          handler: handleReopenQuestion
        - event: LogCancelArbitration(indexed bytes32)
          handler: handleCancelArbitration
      file: ./src/reality.ts
  - kind: ethereum
    name: ConditionalTokens
    network: gnosis
    source:
      abi: ConditionalTokens
      address: "0xCeAfDD6bc0bEF976fdCd1112955828E00543c0Ce"
      startBlock: 36404701
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      abis:
        - name: ConditionalTokens
          file: ./abis/ConditionalTokens.json
      entities: []
      eventHandlers:
        - event: PositionSplit(indexed address,address,indexed bytes32,indexed
            bytes32,uint256[],uint256)
          handler: handlePositionSplit
        - event: PositionsMerge(indexed address,address,indexed bytes32,indexed
            bytes32,uint256[],uint256)
          handler: handlePositionsMerge
        - event: PayoutRedemption(indexed address,indexed address,indexed
            bytes32,bytes32,uint256[],uint256)
          handler: handlePayoutRedemption
        - event: ConditionResolution(indexed bytes32,indexed address,indexed
            bytes32,uint256,uint256[])
          handler: handleConditionResolution
      file: ./src/conditional-tokens.ts
  - kind: ethereum
    name: LightGeneralizedTCR
    network: gnosis
    source:
      abi: IEvidence
      address: "0x5aAF9E23A11440F8C1Ad6D2E2e5109C7e52CC672"
      startBlock: 36336124
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      abis:
        - name: IEvidence
          file: ./abis/IEvidence.json
      entities: []
      eventHandlers:
        - event: MetaEvidence(indexed uint256,string)
          handler: handleCurateMetaEvidence
      file: ./src/evidence-metadata.ts
  - kind: ethereum
    name: Realitio_v2_1_ArbitratorWithAppeals
    network: gnosis
    source:
      abi: IEvidence
      address: "0x0000000000000000000000000000000000000000"
      startBlock: 36404701
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      abis:
        - name: IEvidence
          file: ./abis/IEvidence.json
      entities: []
      eventHandlers:
        - event: MetaEvidence(indexed uint256,string)
          handler: handleArbitratorMetaEvidence
      file: ./src/evidence-metadata.ts
  - kind: ethereum
    name: RealitioForeignArbitrationProxyWithAppeals
    network: gnosis
    source:
      abi: IEvidence
      address: "0x0000000000000000000000000000000000000000"
      startBlock: 36404701
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      abis:
        - name: IEvidence
          file: ./abis/IEvidence.json
      entities: []
      eventHandlers:
        - event: MetaEvidence(indexed uint256,string)
          handler: handleArbitratorMetaEvidence
      file: ./src/evidence-metadata.ts
templates:
  - kind: ethereum/contract
    name: Pool
    network: gnosis
    source:
      abi: Pool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/algebra/mappings/core.ts
      entities:
        - Pool
        - Token
      abis:
        - name: Pool
          file: ./abis/pool.json
        - name: Factory
          file: ./abis/factory.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Initialize(uint160,int24)
          handler: handleInitialize
        - event: Swap(indexed address,indexed address,int256,int256,uint160,uint128,int24)
          handler: handleSwap
        - event: Mint(address,indexed address,indexed int24,indexed
            int24,uint128,uint256,uint256)
          handler: handleMint
        - event: Burn(indexed address,indexed int24,indexed int24,uint128,uint256,uint256)
          handler: handleBurn
        - event: Fee(uint16)
          handler: handleChangeFee
        - event: Collect(indexed address,address,indexed int24,indexed
            int24,uint128,uint128)
          handler: handleCollect
        - event: CommunityFee(uint8,uint8)
          handler: handleSetCommunityFee
